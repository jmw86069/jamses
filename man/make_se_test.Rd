% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jam_sestats_dfs.R
\name{make_se_test}
\alias{make_se_test}
\title{Make SummarizedExperiment test data}
\usage{
make_se_test(
  ngroups = 2,
  nreps = 3,
  nrow = 50,
  multiplier = 1,
  offset = 7,
  hit_fraction = 1/2,
  hit_max = 2.8,
  noise_factor = 1,
  seed = 123,
  assay_name = "counts",
  sparsity = 0,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{ngroups}{\code{integer} number of experimental groups}

\item{nrow}{\code{integer} number of rows (measurements)}

\item{multiplier}{\code{numeric} value multiplied by \code{rnorm()} to adjust
the magnitude of values produced, default 1.}

\item{offset}{\code{numeric} value added to the output of \code{rnorm()}, default 7.}

\item{hit_fraction}{\code{numeric} value between 0 and 1 indicating the
fraction of rows to simulate as having a fold change, default 1/2.}

\item{hit_max}{\code{numeric} maximum value for a simulated fold change,
default 2.8, intended to be interpreted as log2 of a 7-fold change.}

\item{noise_factor}{\code{numeric} multiplied by \code{rnorm()} to add additional
noise.}

\item{seed}{\code{numeric} passed to \code{set.seed()} when provided, for
reproducible random output.}

\item{assay_name}{\code{character} name to use for the assay name in the output.}

\item{sparsity}{\code{numeric} value from 0 to 1, default 0, indicating the
fraction of values that are converted to \code{NA} to simulate sparse
data measurements. It can be provided as a vector and applied to
each group in order.
In some proteomics datasets, control samples may be substantially
more sparse than other groups, for example if the control is
non-targeted IP, or negative control. In this case, data can
be simulated by using \code{sparsity=c(0.6, 0, 0)} for three groups.}

\item{verbose}{\code{logical} indicating whether to print verbose output.}

\item{...}{additional arguments are ignored.}

\item{mreps}{\code{integer} number of replicates per group, can be used
to provide the number of replicates for each group in order.}
}
\value{
\code{SummarizedExperiment} object
}
\description{
Make SummarizedExperiment test data
}
\examples{
se <- make_se_test();
heatmap_se(se)
heatmap_se(se, controlSamples=1:3)

se <- make_se_test(ngroups=3, assay_name="expression");
heatmap_se(se, apply_hm_column_title=TRUE)
heatmap_se(se, controlSamples=1:3, control_label="versus A", apply_hm_column_title=TRUE)

se <- make_se_test(ngroups=3, assay_name="expression", nreps=c(3, 5, 4));
heatmap_se(se, controlSamples=1:3, control_label="versus A", apply_hm_column_title=TRUE)

se <- make_se_test(ngroups=3, assay_name="expression", nreps=c(3, 5, 4), hit_max=4);
heatmap_se(se, controlSamples=1:3, control_label="versus A", apply_hm_column_title=TRUE)

sedesign <- groups_to_sedesign(SummarizedExperiment::colData(se)[, "group", drop=FALSE])
plot_sedesign(sedesign)
sestats <- se_contrast_stats(se=se, sedesign=sedesign, assay_names="expression")
plot_sedesign(sedesign, sestats=sestats,
   contrast_style="none", sestats_style="label")
heatmap_se(se, controlSamples=1:3, control_label="versus A",
   column_split="group",
   apply_hm_column_title=TRUE, sestats=sestats, color_max=5)

if (jamba::check_pkg_installed("venndir")) {
   venndir::venndir(hit_array_to_list(sestats), overlap_type="each")
   venndir::venndir(hit_array_to_list(sestats), overlap_type="each", proportional=TRUE)
   venndir::venndir(hit_array_to_list(sestats), overlap_type="each", show_labels="ncs")
}

# demonstrate sparsity
se2 <- make_se_test(sparsity=c(0.5, 0));
hm2a <- heatmap_se(se2,
   column_title="global centered\nall values shown")
# when centering versus a sparse control group, some values can be lost:
hm2b <- heatmap_se(se2, controlSamples=1:3,
   column_title="centered vs A\nsome values become NA")
hm2a + hm2b
# use naControlFloor
hm2c <- heatmap_se(se2,
   column_title="centered vs A\nnaControlFloor=7",
   naControlFloor=7, naControlAction="floor", controlSamples=1:3)
hm2a + hm2b + hm2c

}
\seealso{
Other jamses SE utilities: 
\code{\link{se_collapse_by_column}()},
\code{\link{se_collapse_by_row}()},
\code{\link{se_detected_rows}()},
\code{\link{se_normalize}()},
\code{\link{se_rbind}()},
\code{\link{se_to_rowcoldata}()}
}
\concept{jamses SE utilities}
