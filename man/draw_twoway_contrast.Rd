% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jam_draw_contrasts.R
\name{draw_twoway_contrast}
\alias{draw_twoway_contrast}
\title{Draw two one-way contrasts using block arrows, showing a two-way connector}
\usage{
draw_twoway_contrast(
  x0,
  x1,
  y0,
  y1,
  color = "peachpuff",
  border = "black",
  extend_ex = 0.3,
  extend_angle = 10,
  plot_type = c("base", "grid"),
  label = NULL,
  label_sep = "\\n",
  na.rm = TRUE,
  label_color = "white",
  label_cex = 1,
  label_font = 1,
  label_position = 0.5,
  twoway_label = NULL,
  twoway_label_color = label_color,
  twoway_label_cex = label_cex,
  twoway_label_font = label_font,
  twoway_label_position = 0.5,
  twoway_lwd = 5,
  contingency = c("loop", "scrunch"),
  draw_oneway = TRUE,
  drawing_order = c("two-two-one", "one-two", "two-one-two"),
  do_plot = TRUE,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{x0, x1, y0, y1}{\code{numeric} values with the start and end coordinates,
for the x and y axes, respectively.}

\item{color, border}{\code{character} R colors used to define color fill
and border, respectively, for each block arrow,}

\item{extend_ex}{\code{numeric} which defines the amount to extend each
contrast arrow when defining control points for a bezier spline
from the end of one contrast, to the beginning of the next contrast.
The value \code{extend_ex} extends the contrast by 20\% of the contrast
line length.}

\item{extend_angle}{\code{numeric} value in degrees (values from 0 to 360)
which defines the relative angle from the first contrast, toward
the second contrast, when defining control points for the bezier
spline. The default value \code{extend_angle=15} angles the extended line
15 degrees toward the next contrast, starting at the end of the
first contrast. The same angle is used, rotated 180 degrees, for
the second control point at the beginning of the second contrast.}

\item{plot_type}{\code{character} string indicating the type of plot output:
\itemize{
\item \code{"base"}: base R graphics
\item \code{"grid"}: grid graphics (not yet implemented)
}}

\item{label}{\code{character} vector or \code{list} with optional label to
display atop each block arrow.
For base R graphics, the label is drawn using
\code{jamba::shadowText()} to render an outline around the text.
\itemize{
\item When \code{label} is a \code{character} vector, it is converted to a \code{list}
in two ways depending upon the number of block arrows (\code{length(x0)}):
\itemize{
\item \code{length == 1}:  \code{label} is converted to \code{list} with length == 1.
\item \code{length > 1}: \code{label} is converted to \code{list} using \code{as.list},
then expanded to \code{length(x0)}.
}
\item When \code{label} is passed as a \code{list}, or after \code{label} is converted
to a \code{list}:
\itemize{
\item Each block arrow label uses one concatenated string after
calling \code{jamba::cPaste(..., sep=label_sep)} which joins values
by default using newline \code{"\\n"} between each value.
}
}}

\item{label_sep}{\code{character} string used as separator, passed to
\code{jamba::cPaste()}, so that each block arrow may contain a vector
which is concatenated using \code{label_sep} between each value.
By default \code{label_sep="\\n"} which prints each value on a new line.}

\item{na.rm}{\code{logical} passed to \code{jamba::cPaste()} to define how to
display NA labels:
\itemize{
\item \code{na.rm=FALSE}: \code{"NA"}
\item \code{na.rm=TRUE}: \code{""}.
}}

\item{label_color}{\code{character} color used for the \code{label}.}

\item{label_cex}{\code{numeric} label font expansion factor, used to adjust
the font size of the text label.}

\item{label_font}{\code{numeric} indicating the font face, defined as:
\itemize{
\item 1 = normal font
\item 2 = bold font
\item 3 = italic font
\item 4 = bold, italic font
}}

\item{twoway_label}{\code{character} or \code{list} handled the same as \code{label}.
This label is placed atop the two-way connector, at an angle aligned
with the middle of the connector curved line.}

\item{twoway_label_color}{\code{character} color used for the \code{label}.}

\item{twoway_label_cex}{\code{numeric} label font expansion factor, used to adjust
the font size of the text label.}

\item{twoway_label_font}{\code{numeric} indicating the font face, defined as:
\itemize{
\item 1 = normal font
\item 2 = bold font
\item 3 = italic font
\item 4 = bold, italic font
}}

\item{do_plot}{\code{logical} indicating whether to draw the block arrow.}

\item{verbose}{\code{logical} indicating whether to print verbose output.}

\item{...}{additional arguments are passed to \code{make_block_arrow_polygon()},
including \code{arrow_ex} the arrow size expansion factor, and
\code{head_ex} the arrow head expansion factor, which is adjusted
relative to the arrow stem width.}
}
\description{
Draw two one-way contrasts using block arrows, showing a two-way connector
}
\details{
This function essentially draws two one-way contrasts
in the form: \code{(group1-group2)-(group3-group4)}

This two-way contrast is represented by two one-way contrasts:
\enumerate{
\item group1-group2
\item group3-group4
}

This function renders two individual one-way contrasts, then
draws a connector from the end of group2, to the beginning of group3.
\subsection{TODO:}{
\itemize{
\item Change the order of drawing:
\enumerate{
\item Draw the two-way connector border.
\item Draw the one-way contrasts.
\item Draw the two-way connector fill.
\item These steps would ensure the connector line does not
overlap the one-way contrasts, and would allow the connector to
connect directly to the contrast at the ends of the block arrows.
}
}
}
}
\examples{
plot(NULL, xlim=c(0, 5), ylim=c(0, 4), asp=1, xlab="", ylab="")
draw_twoway_contrast(c(1, 1), c(4, 4), c(1, 2), c(1, 2),
   label=c("contrast one", "contrast two"))

plot(NULL, xlim=c(0, 5), ylim=c(0, 6), asp=1, xlab="", ylab="")
draw_twoway_contrast(c(1, 2, 1, 2, 2, 2), c(4, 5, 4, 5, 5, 5),
   c(1, 1.3, 2, 3, 4, 5), c(1, 1.3, 2, 3, 4, 5),
   label=c("contrast one", "contrast two"),
   extend_ex=0.5, extend_angle=10, color=colorjam::rainbowJam(6))

plot(NULL, xlim=c(0, 5), ylim=c(0, 6), asp=1, xlab="", ylab="")
draw_twoway_contrast(c(1, 2, 1, 2, 2, 2), c(4, 5, 4, 5, 5, 5),
   c(1, 1.3, 2, 2.2, 4, 5), c(1, 1.3, 2, 2.2, 4, 5),
   label=c("contrast one", "contrast two"),
   extend_ex=0.3, extend_angle=20, color=colorjam::rainbowJam(6))

plot(NULL, xlim=c(-2, 8), ylim=c(1, 6), asp=1, xlab="", ylab="")
draw_twoway_contrast(
   x0=c(1, 2, 1, 2, 1, 1, 0, -2, 4, 3, 2, 4),
   x1=c(4, 5, 4, 5, 6, 6, 0, -2, 7, 6, 2, 4),
   y0=c(1, 1.3, 2, 2.2, 4, 5, 5, 5, 3.2, 3, 6, 6),
   y1=c(1, 1.3, 2, 2.2, 4, 5, 3, 3, 3.2, 3, 3.5, 3.5),
   label=c("contrast one", "contrast two"), verbose=TRUE,
   extend_ex=0.5, extend_angle=10,
   color=colorjam::rainbowJam(12, Crange=c(90, 120)))

draw_twoway_contrast(x0=c(4, 3), x1=c(4, 3), y0=c(2, 2), y1=c(1, 1),
   label=c("contrast one", "contrast two"),
   color=c("gold", "dodgerblue"), extend_angle=-20)
}
