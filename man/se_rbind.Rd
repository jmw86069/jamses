% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jam_se_rbind.R
\name{se_rbind}
\alias{se_rbind}
\title{Combine SummarizedExperiment objects by row}
\usage{
se_rbind(
  se_list,
  colnames_from = "_(n|p|neg|pos)_",
  colnames_to = "_X_",
  colnames_keep = NULL,
  colData_action = c("identical", "all"),
  colData_sep = ";",
  verbose = FALSE,
  ...
)
}
\arguments{
\item{se_list}{\code{list} of \code{SummarizedExperiment} objects.}

\item{colnames_from}{\code{character} vector of patterns used with \code{gsub()}
to convert \code{colnames()} for each object in \code{se_list} to an identifier
that will be shared across all objects in \code{se_list}.}

\item{colnames_to}{\code{character} vector of replacements used with \code{gsub()}
alongside each entry in \code{colnames_from} to convert \code{colnames()}
for each object in \code{se_list} to an identifier
that will be shared across all objects in \code{se_list}.}

\item{colData_action}{\code{character} string indicating the action used to
combine \code{colData()} across \code{se_list}:
\itemize{
\item \code{"identical"}: retain only those columns in \code{colData()} which are
identical in all \code{se_list} objects.
\item \code{"all"}: retain all columns, but convert columns with mismatched
values to store comma-delimited values.
}}

\item{colData_sep}{\code{character} string used as delimiter when
\code{colData_action="all"} and when values in a column in \code{colData()}
differs across objects in \code{se_list}. Only values that differ are
delimited, to minimize redundancy.}

\item{...}{additional arguments are ignored.}
}
\value{
\code{SummarizedExperiment} object whose \code{colData()} has been
processed according to \code{colData_action} - either keeping only
columns with identical values, or keeping all values delimited
as a \code{character} string when values differ.
}
\description{
Combine SummarizedExperiment objects by row, using \code{rbind()} logic.
}
\details{
This function is intended to help the process of calling
\code{SummarizedExperiment::rbind()}.

The process:
\enumerate{
\item Convert \code{colnames()} for each entry in \code{se_list} using \code{colnames_from}
and \code{colnames_to}. This step is useful when each object in \code{se_list}
may be using a different set of \code{colnames()}. For example \code{"sample_p_12"}
and \code{"sample_n_12"} might be equivalent, so renaming them
with \code{colnames_from=c("_[np]_")} and \code{colnames_to=c("_X_")} would convert
both values to \code{"sample_X_12"}.
\item Subset each object in \code{se_list} using only shared \code{colnames()}.
\item Determine how to handle \code{colData()} columns that are not identical:
\itemize{
\item \code{colData_action="identical"}: will only keep columns whose values
are identical across all objects in \code{se_list}.
\item \code{colData_action="all"}: will keep columns in \code{colData()}, however
non-identical columns will be converted to \code{character} and values
will be comma-delimited.
}
\item Perform \code{rbind()}.
}
\subsection{TODO:}{
\itemize{
\item Write equivalent \code{se_cbind()} - it will wait until there is a
driving use case.
\item Consider retaining only shared \code{assayNames()} across \code{se_list}.
\item Consider optionally retaining user-defined \code{assayNames()}.
(Alternatively, the user can subset the assayNames upfront, though
it might be tedious). The recommended pattern in that case:
}

\if{html}{\out{<div class="sourceCode">}}\preformatted{se <- se_rbind(
   se_list=lapply(se_list, function(se)\{
      assays(se) <- assays(se)[assay_names];
      return(se)
   \})
)
}\if{html}{\out{</div>}}
}
}
\examples{
m1 <- matrix(rnorm(100), ncol=10);
colnames(m1) <- paste0("sample_p_", 1:10);
rownames(m1) <- paste0("row_", 1:10);
m2 <- matrix(rnorm(100), ncol=10);
colnames(m2) <- paste0("sample_n_", 1:10);
rownames(m2) <- paste0("row_", 11:20);
sample_id <- gsub("_[np]_", "_X_", colnames(m1));
m1
m2
se1 <- SummarizedExperiment::SummarizedExperiment(
   assays=list(counts=m1),
   rowData=data.frame(measurement=rownames(m1)),
   colData=data.frame(sample=colnames(m1),
      sample_id=sample_id))
se2 <- SummarizedExperiment::SummarizedExperiment(
   assays=list(counts=m2),
   rowData=data.frame(measurement=rownames(m2)),
   colData=data.frame(sample=colnames(m2),
      sample_id=sample_id))
# this step fails because colnames are not shared
# do.call(SummarizedExperiment::rbind, list(se1, se2))

# keep only identical colData columns
se12 <- se_rbind(list(se1, se2))
SummarizedExperiment::colData(se12)

# keep all colData columns
se12all <- se_rbind(list(se1, se2),
   colData_action="all")
SummarizedExperiment::colData(se12all)

}
\seealso{
Other jamses utilities: 
\code{\link{fold_to_log2fold}()},
\code{\link{log2fold_to_fold}()},
\code{\link{mark_stat_hits}()},
\code{\link{se_collapse_by_column}()},
\code{\link{se_collapse_by_row}()},
\code{\link{shrinkDataFrame}()},
\code{\link{shrink_df}()},
\code{\link{strsplitOrdered}()},
\code{\link{update_function_params}()},
\code{\link{update_list_elements}()}
}
\concept{jamses utilities}
