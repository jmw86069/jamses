% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jam_contrast2comp.R
\name{contrast2comp}
\alias{contrast2comp}
\alias{comp2contrast}
\alias{names_contrast2comp}
\alias{names_comp2contrast}
\title{Convert contrast to short-form comp, convert comp to contrast}
\usage{
contrast2comp(
  contrast_names,
  contrast_delim = "-",
  contrast_factor_delim = "_",
  comp_factor_delim = ":",
  add_attr = FALSE,
  verbose = FALSE,
  ...
)

comp2contrast(
  comps,
  contrast_delim = "-",
  contrast_factor_delim = "_",
  comp_factor_delim = ":",
  factor_order = NULL,
  add_attr = FALSE,
  verbose = FALSE,
  ...
)

names_contrast2comp(
  contrast_names,
  contrast_delim = "-",
  contrast_factor_delim = "_",
  comp_factor_delim = ":",
  add_attr = FALSE,
  verbose = FALSE,
  ...
)

names_comp2contrast(
  comps,
  contrast_delim = "-",
  contrast_factor_delim = "_",
  comp_factor_delim = ":",
  factor_order = NULL,
  add_attr = FALSE,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{contrast_names}{\code{character} vector of statistical contrasts}

\item{contrast_delim}{\code{character} string delimiter between groups,
typically \code{"-"} to indicate subtraction of group means.}

\item{contrast_factor_delim}{\code{character} string delimiter between
design factors in a contrast.}

\item{comp_factor_delim}{\code{character} string delimiter between
design factors in a comp.}

\item{add_attr}{\code{logical} indicating whether to add attributes to
the output, containing the input values provided.}

\item{verbose}{\code{logical} indicating whether to print verbose output,
or for much more verbose output use \code{verbose=2}.}

\item{...}{additional arguments are ignored.}

\item{factor_order}{\code{integer}, \code{list} of \code{integer} vectors, or \code{NULL}.
When supplied as \code{integer} vector, it is converted to a \code{list}
and expanded to \code{length()} of the input. The \code{integer} values
are used by \code{comp2contrast()} to force the order of factor
comparisons for two-way and higher order contrasts.}
}
\description{
Convert contrast to short-form comp, and convert comp back to original contrast.
}
\details{
These functions are intended to reduce the number of characters
required to represent a statistical contrast.
\code{contrast2comp()} converts long to short form, and
\code{comp2contrast()} converts short to long form.
\enumerate{
\item \code{"contrast"}: the fully-defined contrast
\item \code{"comp"}: equivalent abbreviated form, a short comparison
}

Note that one goal is to reduce characters in Excel worksheet names,
currently limited to 31 characters. Also note, the \code{":"} delimiter is
not permitted in Excel sheet names, thus \code{save_sestats()} uses
semicolon \code{";"}. This limitation may warrant using a different default
delimiter between factors, such as comma \code{","}, or pipe \code{"|"},
or forward-slash \code{"/"}.
\subsection{Assumptions}{

The key assumption is that an experimental group name is a
\code{character} string composed of its factor levels, with a delimiter
between factors. For example:
\itemize{
\item \code{CellA_Treated} - is interpreted as \code{"CellA"} and \code{"Treated"}
\item \code{CellA_Control} - is interpreted as \code{"CellA"} and \code{"Control"}
}

A contrast therefore:
\itemize{
\item \code{CellA_Treated-CellA_Control} can be re-written
\item \code{CellA:Treated-Control}
}

Factors must be in identical order for all groups, and there
must be no empty factor levels.
Do not use: \code{"CellA_Treated_Time0"}, \code{"CellA_Time0"}.

Finally, the overall assumption is that contrasts are composed
of reasonable comparisons between factor levels, with no
more factors being compared than the depth of contrast. For example,
a one-way contrast can compare one factor,
a two-way contrast can compared two factors, and so on.
In most cases where the assumptions above are broken, the
output should be the same as the input, with no change.

When using \code{groups_to_sedesign()}, the output contrasts should all
meet these requirements, therefore all contrasts can be
converted to \code{"comp"} form for plot labels, and converted
back to \code{"contrasts"} as needed.

Delimiters can be customized, however they must all be
single-character values, avoiding \verb{()[]} which are reserved.
For example, sometimes factors are separated by \code{"."} such as
in the contrast: \code{"A.B-C.B"}. In this case, use:
\code{contrast2comp("A.B-C.B", contrast_factor_delim=".")}.
The corresponding conversion back to contrast would be:
\code{comp2contrast("A-C:B", contrast_factor_delim=".")}
}

\subsection{Design goals for conversion to short form comp}{
\enumerate{
\item \code{"comp"} should be interchangeable with \code{"contrast"}
\itemize{
\item use \code{contrast2comp()} and \code{comp2contrast()}
}
\item when a contrast cannot be abbreviated, comp will use contrast
\itemize{
\item see examples
\item when more factors are being compared than the contrast order,
the function will leave the contrast as-is
\item Consider \code{"CellA_Treated-CellB_Control"}.
Both \code{"CellA-CellB"} and \code{"Treated-Control"} are compared
in a one-way contrast, therefore it cannot be abbreviated.
}
\item \code{"comp"} shall not create any whitespace
\itemize{
\item factors will be delimited with \code{":"}
\item factor levels will be delimited with \code{"-"}
\item other potential delimiters \code{"*"}, \code{"+"}
already have meaning in formula context.
}
\item \code{"comp"} shall not use parentheses \code{"()"}, where possible
\itemize{
\item the goal is to reduce characters
\item parentheses are not necessary for balanced contrasts
\item unbalanced contrasts (see point 2) will retain the original syntax
}
\item the order of factors should be maintained in \code{"comp"}
\itemize{
\item goal is to reproduce the original correct group name in contrast form
\item the original group name is necessary for the design matrix
}
}
}

\subsection{Worked examples}{
\enumerate{
\item One-way contrast
\itemize{
\item contrast: \code{CellA_Treated-CellA_Control}
\item comment: \code{CellA} is unchanged, \code{Treated-Control} is changed
\item comp: \code{CellA:Treated-Control}
}
\item Two-way contrast
\itemize{
\item contrast: \code{(CellA_Treated-CellA_Control)-(CellB_Treated-CellB_Control)}
\item comment: \code{CellA-CellB} is changed, \code{Treated-Control} is changed
\item comp: \code{CellA-CellB:Treated-Control}
\item note: when converting comp \code{CellA-CellB:Treated-Control} back to
contrast, two forms are mathematically equivalent:
}\preformatted{# form 1
(CellA_Treated-CellA_Control)-(CellB_Treated-CellB_Control)
# form 2
(CellA_Treated-CellB_Treated)-(CellA_Control-CellB_Control)
# both are equivalent
CellA_Treated - CellB_Treated - CellA_Control + CellB_Control
}
\itemize{
\item These two forms can be controlled in \code{comp2contrast()} with
argument \code{factor_order}.
}
\item Three-way contrast (it happens rarely, but does happen)
\itemize{
\item contrast:
}\preformatted{(CellA_Treated_Mut-CellA_Control_Mut)-(CellB_Treated_Mut-CellB_Control_Mut) -
(CellA_Treated_WT-CellA_Control_WT)-(CellB_Treated_WT-CellB_Control_WT)
}
\itemize{
\item comment: \code{CellA-CellB}, \code{Treated-Control}, \code{Mut-WT} are changed
\item comp: \code{CellA-CellB:Treated-Control:Mut-WT}
}
\item One-way contrast with additional unchanged factors
\itemize{
\item contrast: \code{CellA_Treated_WT-CellA_Control_WT}
\item comment: \code{CellA}, \code{WT} are unchanged, \code{Treated-Control} is changed
\item comp: \code{CellA:Treated-Control:WT}
}
\item Unbalanced one-way contrast
\itemize{
\item contrast: \code{CellA_Treated-CellB_Control}
\item comment: \code{CellA-CellB} and \code{Treated-Control} are changed
\item comp: \code{CellA_Treated-CellB_Control}
}
\item Mis-directed two-way contrast
\itemize{
\item contrast: \code{(CellA_Treated-CellA_Control)-(CellB_Control-CellB_Treated)}
\item comment: \code{CellA-CellB} are changed, \code{Treated-Control/Control-Treated} are changed
\item Note: The \code{Treated-Control} and \code{Control-Treated} do not agree in
direction. The output is partially abbreviated, and maintains the
original direction to prevent loss of information.
\item comp: \code{(CellA:Treated-Control)-(CellB:Control-Treatment)}
}
}
}
}
\examples{
contrast_names <- c(
   "CellA_Treated-CellA_Control",
   "CellB_Treated-CellB_Control",
   "CellB_Treated-CellA_Control",
   "(CellA_Treated-CellA_Control)-(CellB_Treated-CellB_Control)",
   "(CellB_Treated-CellB_Control)-(CellA_Treated-CellA_Control)",
   "(CellA_Treated-CellB_Treated)-(CellA_Control-CellB_Control)"
);
contrast2comp(contrast_names, comp_factor_delim=";")
comps <- contrast2comp(contrast_names);
data.frame(contrast_names,
   nchar_contrasts=nchar(contrast_names),
   comps,
   nchar_comps=nchar(comps))

# compare conversion back to contrast
data.frame(contrast_names,
   contrast_again=comp2contrast(comps),
   changed=contrast_names != comp2contrast(comps))

# factors can be ordered by contrast
contrasts2 <- comp2contrast(comps,
   factor_order=list(1:2, 1:2, 1:2,
      c(2,1), c(2,1), 1:2))
# compare conversion back to contrast
data.frame(contrast_names,
   contrasts2,
   changed=contrast_names != contrasts2)

# note change in direction for two-way contrasts
# Treated-Control and Control-Treated
contrast_diff <- "(CellA_Treated-CellA_Control)-(CellB_Control-CellB_Treated)";
comp_diff <- contrast2comp(contrast_diff)
# partially abbreviated comp
comp_diff
# it is converted back to original form
comp2contrast(comp_diff)
data.frame(contrast_diff,
   nchar_contrasts=nchar(contrast_diff),
   comp_diff,
   nchar_comps=nchar(comp_diff))

# evaluate the rare three-way contrast
contrast_names_3way <- c(
   contrast_names[4],
   gsub("([a-zA-Z])([-)])", "\\\\1_Mut\\\\2", contrast_names[4]),
   gsub("([a-zA-Z])([-)])", "\\\\1_WT\\\\2", contrast_names[4]),
   paste0("(",
   gsub("([a-zA-Z])([-)])", "\\\\1_Mut\\\\2", contrast_names[4]),
   ")-(",
   gsub("([a-zA-Z])([-)])", "\\\\1_WT\\\\2", contrast_names[4]),
   ")"))
comp_3way <- contrast2comp(contrast_names_3way);
contrasts2_3way <- comp2contrast(comp_3way);
contrasts2_3way <- comp2contrast(comp_3way, factor_order=c(2,1,3));
data.frame(contrast_names_3way,
   nchar_contrasts=nchar(contrast_names_3way),
   comp_3way,
   nchar_comps=nchar(comp_3way));

data.frame(contrast_names_3way,
   contrasts2_3way,
   changed=contrast_names_3way != contrasts2_3way);

}
