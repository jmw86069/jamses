% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jam_draw_contrasts.R
\name{draw_oneway_contrast}
\alias{draw_oneway_contrast}
\title{Draw one-way contrast using block arrows}
\usage{
draw_oneway_contrast(
  x0,
  x1,
  y0,
  y1,
  color = "peachpuff",
  border = "black",
  plot_type = c("base", "grid"),
  label = NULL,
  label_sep = "\\n",
  na.rm = TRUE,
  label_color = "white",
  label_cex = 1,
  label_font = 2,
  oneway_position = 0.5,
  do_plot = TRUE,
  verbose = FALSE,
  debug = FALSE,
  ...
)
}
\arguments{
\item{x0, x1, y0, y1}{\code{numeric} values with the start and end coordinates,
for the x and y axes, respectively.}

\item{color, border}{\code{character} R colors used to define color fill
and border, respectively, for each block arrow,}

\item{plot_type}{\code{character} string indicating the type of plot output:
\itemize{
\item \code{"base"}: base R graphics
\item \code{"grid"}: grid graphics (not yet implemented)
}}

\item{label}{\code{character} vector or \code{list} with optional label to
display atop each block arrow.
For base R graphics, the label is drawn using
\code{jamba::shadowText()} to render an outline around the text.
\itemize{
\item When \code{label} is a \code{character} vector, it is converted to a \code{list}
in two ways depending upon the number of block arrows (\code{length(x0)}):
\itemize{
\item \code{length == 1}:  \code{label} is converted to \code{list} with length == 1.
\item \code{length > 1}: \code{label} is converted to \code{list} using \code{as.list},
then expanded to \code{length(x0)}.
}
\item When \code{label} is passed as a \code{list}, or after \code{label} is converted
to a \code{list}:
\itemize{
\item Each block arrow label uses one concatenated string after
calling \code{jamba::cPaste(..., sep=label_sep)} which joins values
by default using newline \code{"\\n"} between each value.
}
}}

\item{label_sep}{\code{character} string used as separator, passed to
\code{jamba::cPaste()}, so that each block arrow may contain a vector
which is concatenated using \code{label_sep} between each value.
By default \code{label_sep="\\n"} which prints each value on a new line.}

\item{na.rm}{\code{logical} passed to \code{jamba::cPaste()} to define how to
display NA labels:
\itemize{
\item \code{na.rm=FALSE}: \code{"NA"}
\item \code{na.rm=TRUE}: \code{""}.
}}

\item{label_color}{\code{character} color used for the \code{label}.}

\item{label_cex}{\code{numeric} label font expansion factor, used to adjust
the font size of the text label.}

\item{label_font}{\code{numeric} indicating the font face, defined as:
\itemize{
\item 1 = normal font
\item 2 = bold font
\item 3 = italic font
\item 4 = bold, italic font
}}

\item{do_plot}{\code{logical} indicating whether to draw the block arrow.}

\item{verbose}{\code{logical} indicating whether to print verbose output.}

\item{debug}{\code{logical} indicating whether to print additional debug info.}

\item{...}{additional arguments are passed to \code{make_block_arrow_polygon()},
including \code{arrow_ex} the arrow size expansion factor, and
\code{head_ex} the arrow head expansion factor, which is adjusted
relative to the arrow stem width.}
}
\description{
Draw one-way contrast using block arrows
}
\examples{
plot(NULL, xlim=c(0, 5), ylim=c(0, 4), asp=1, xlab="", ylab="")
draw_oneway_contrast(1, 4, 1, 1, label="contrast label")
draw_oneway_contrast(1, 4, 2, 2, head_ex=2, label_cex=1, label="contrast label")
draw_oneway_contrast(1, 4, 3, 3, arrow_ex=2, label_cex=2, label="contrast label")
draw_oneway_contrast(3, 0, 4, 1, arrow_ex=2, label_cex=2, label="contrast label")

}
\seealso{
Other jam experiment design: 
\code{\link{check_sedesign}()},
\code{\link{contrast2comp}()},
\code{\link{contrast_colors_by_group}()},
\code{\link{contrast_names_to_sedesign}()},
\code{\link{contrasts_to_factors}()},
\code{\link{contrasts_to_venn_setlists}()},
\code{\link{draw_twoway_contrast}()},
\code{\link{filter_contrast_names}()},
\code{\link{groups_to_sedesign}()},
\code{\link{plot_sedesign}()},
\code{\link{sedesign_to_factors}()},
\code{\link{validate_sedesign}()}
}
\concept{jam experiment design}
